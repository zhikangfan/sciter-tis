<html window-frame="transparent" window-resizable="false">
<head>
    <meta http-equiv="content-type" content="text/html;charset=utf-8" />
    <title>Test Title</title>
    <script type="text/tiscript">
        /*
        * props: 传递的属性
        * kids: 传递的子节点
        * states: 
        */
        function H1(props, kids, states) {
            return <h1>{props.txt}<span>kids: {kids}</span><span>states:{states.value}</span></h1>;
        }
        function tick() {
             const velement = 
                <div id="root">
                <h1>Hello, world!</h1>
                <h2>It is {new Date().toLocaleString(#time)}.</h2>
                </div>;
            $(div#root).merge(velement); //更新，重新渲染 该Element.merge()函数将元素及其子元素与前一个元素进行比较，并仅应用使 DOM 达到所需状态所需的 DOM 更新
            return true; // to keep timer running
        }
        self.timer(1s, tick)
        
       // var foo = 0;
        //self.timer(1s, () => {
         //   foo = foo + 1;
        //    return true;
       // })
    </script>
</head>
<reactor |body>
    <H1 txt="111" :value={222}><span>我是kids</span></H1>
    <div id="root"></div>
</reactor>
</html>